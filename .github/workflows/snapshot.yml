name: Snapshot
on:
  workflow_call:
  workflow_dispatch:

jobs:
  snapshot:
    name: Release snapshot version
    permissions:
      contents: write
      id-token: write
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Setup
        uses: ./.github/actions/setup

      - name: Publish Initial Versions for New Packages
        continue-on-error: false
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm config set "//registry.npmjs.org/:_authToken" "$NPM_TOKEN"
          # Find packages that don't exist in NPM and publish them with initial version
          yarn workspaces list --json | jq -r '.name' | while read pkg; do
            if [ "$pkg" != "." ] && ! npm view "$pkg" &>/dev/null; then
              echo "Package $pkg doesn't exist in NPM, publishing initial version 0.0.0"
              cd $(yarn workspaces info --json | jq -r ".[\"$pkg\"].location")
              # Temporarily set version to 0.0.0 for initial publish
              jq '.version = "0.0.0"' package.json > package.json.tmp && mv package.json.tmp package.json
              yarn npm publish --access public --tag alpha
              cd -
            fi
          done

      - name: Publish Snapshots
        continue-on-error: false
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          snapshot=$(git branch --show-current | tr -cs '[:alnum:]-' '-' | tr '[:upper:]' '[:lower:]' | sed 's/-$//')
          npm config set "//registry.npmjs.org/:_authToken" "$NPM_TOKEN"
          yarn run changeset version --no-git-tag --snapshot $snapshot
          yarn run changeset:prepublish
          yarn run changeset publish --no-git-tag --snapshot $snapshot --tag $snapshot

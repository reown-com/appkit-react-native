name: Claude Auto Review

on:
  pull_request:
    types: [opened]
  issue_comment:
    types: [created]

jobs:
  auto-review:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'pull_request'
      || (
        github.event_name == 'issue_comment'
        && github.event.issue.pull_request
        && contains(github.event.comment.body, '@claude review')
      )
    permissions:
      contents: read
      pull-requests: write
      issues: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Claude Auto Review
        uses: WalletConnect/actions/claude/auto-review@1483e05460107d74c575e31af948ce20f9df6387
        with:
          anthropic_api_key: ${{ secrets.ANTHROPIC_API_KEY }}
          model: claude-sonnet-4-20250514
          timeout_minutes: "60"
          project_context: |
            This is the AppKit React Native SDK, a comprehensive wallet connection and blockchain interaction library for React Native applications.

            Key considerations for this project:
            - **React Native SDK Architecture**: Function-based components with hooks exclusively (useState, useEffect)
            - **TypeScript-first Approach**: Strict TypeScript with @types/react-native, noUncheckedIndexedAccess, strict mode
            - **Valtio State Management**: Proxy-based reactivity for controllers (e.g., RouterController, ConnectionsController)
            - **Modular Package Structure**: Separate packages for core, ui, common, wagmi, solana, bitcoin, ethers, coinbase
            - **UI Component System**: Use @reown/appkit-ui-react-native components (Text, Button, Pressable) over react-native defaults
            - **Internal Navigation**: Custom RouterController.ts for navigation, no react-navigation dependency
            - **Performance Optimization**: React.memo, useCallback, useMemo for efficient rendering; FlatList for large datasets
            - **Animation Strategy**: React Native's Animated API exclusively, no react-native-reanimated
            - **Error Handling**: Centralized ErrorUtil with try-catch blocks, descriptive error messages
            - **Security**: Storage only for non-sensitive data, no auth tokens or private keys in storage
            - **Testing**: Jest + React Native Testing Library for 80%+ coverage on controllers and components
            - **Code Quality**: ESLint + Prettier rules, JSDoc for public APIs, no inline styles
            - **Import Organization**: React/RN → External libs → @reown packages → Relative imports
            - **Blockchain Support**: Multi-chain with EVM, Solana, and Bitcoin adapters
            - **Developer Experience**: Clean package exports, strongly typed APIs, comprehensive error handling